# =============================================================================
# Umbrella values.yaml
# =============================================================================

# -----------------------------------------------------------------------------
# Redis (Bitnami subchart)
# -----------------------------------------------------------------------------
redis:
  enabled: true
  architecture: standalone
  master:
    persistence:
      enabled: false                     # dev-friendly; enable in prod overlays
    podAnnotations:
      sidecar.istio.io/inject: "true"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
  auth:
    enabled: true
    existingSecret: redis-auth           # materialized from SealedSecret
    existingSecretPasswordKey: redis-password
  tls:
    enabled: false
  networkPolicy:
    enabled: true
    allowExternal: false
  metrics:
    enabled: false

# -----------------------------------------------------------------------------
# API (Node/Express backend) — your chart aliased as `api`
# -----------------------------------------------------------------------------
api:
  image:
    repository: sample-api
    tag: dev
    pullPolicy: IfNotPresent
  replicaCount: 1

  service:
    type: ClusterIP
    port: 80

  # Redis connection contract used by your api chart templates
  redis:
    host: "{{ .Release.Name }}-redis-master"   # e.g., fullstack-redis-master
    port: 6379
    passwordSecretName: redis-auth
    passwordSecretKey: redis-password

  # Optional direct env (keep empty unless needed)
  env: []

  probes:
    livenessPath: /healthz
    readinessPath: /readyz

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# -----------------------------------------------------------------------------
# Web (React/Vite frontend) — your chart aliased as `web`
# -----------------------------------------------------------------------------
web:
  image:
    repository: sample-frontend
    tag: dev
    pullPolicy: IfNotPresent
  replicaCount: 1

  service:
    type: ClusterIP
    port: 80

  # If your web chart supports envFromSecrets, this provides API_BASE at runtime.
  # (For Vite build-time vars, still inject with --build-arg in CI when building.)
  envFromSecrets:
    - web-env

  # Optional runtime env fallbacks
  env:
    - name: API_BASE
      value: "/api"

  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"
  runtimeConfig:
    googleClientId: "757483491986-s6es27343115bs05medv52v506cg81b0.apps.googleusercontent.com"
    apiBase: "/api"


# -----------------------------------------------------------------------------
# Istio ingress layer — your chart aliased as `istio`
# -----------------------------------------------------------------------------
istio:
  gateway:
    name: web-gateway
    hosts: ["*"]
    port: 80
  virtualService:
    name: fullstack-routing
    hosts: ["*"]
    gatewayName: web-gateway
    routes:
      web: { prefix: "/", service: web, port: 80 }
      api: { prefix: "/api", service: api, port: 80 }
  auth:
    enabled: true
    google:
      clientId: "757483491986-s6es27343115bs05medv52v506cg81b0.apps.googleusercontent.com"
      # Optional: limit to certain Google Workspace domains
      # hostedDomains: ["example.com"]


# -----------------------------------------------------------------------------
# SealedSecrets — your chart aliased as `secrets`
# These ciphertexts are produced by `kubeseal` and render to:
#   - Secret web-env    with key: API_BASE
#   - Secret redis-auth with key: redis-password
# Commit ciphertext safely; never commit raw secrets.
# -----------------------------------------------------------------------------
secrets:
  sealed:
    webEnv:
      apiBase: "AgAqlr1O8BNEcy5ATJjEGYvc9A2a0ErZ7pWtzozUdG06wgbGI1UTnw3xuoL/JozmhMdE9/dmkH/i9r2l6dY/1faTdcvGyHBhRAzYEqSQrRaTKHd6nd13tTrI9I9baZX6S3GDommU1hK73oT3n7RwQj/nOKwoEwkvPgE2aHlKlHI8FtKAvjGhw2gD3e7rLXMkkWrE1e7BQLJTJwWnk/SkVYP1ORm59llp+T1TstKuKznZe9q2dB9vyGgpxWH4hl38T2LYesRPTDxOWNPtwalh5R2KQ/Sfvn1QKL2Rh93GwSiSzujQ2yJ7UnXCwMWn7WbsxBWeHEst/z07afeh/fIny0qvokMQMI/g30t3zWQXDT5Q0dawFp+Z7nZZFBtfXwDGGHwK2KwyjzQC5oY1Gc2+lG7uYCaluUSvVS2lkaDHsq1JQi3n9M75g4wYd+y95rrDGjtp5U9i7AALiZgct2D9g8iHUr9gzEYDx22PvU9UakqcqNuW0AL1+zT3lud+28L6nds5Aps2+IPW4vWMonLuAy4QMrpYibkn9bKvX5Pmn7e9Hw+mtECl1dmYofEcf+NLSBvYmOAUFdJXuetECbzrrFPZffF/WV+8H3msZ8hzplOafJPS9Arb8AU3TmNj89ENTpFlGjZ2QyzlGJKWZKmS2j9KcPandkRpNIUaMJINCBvHwZFM7MjM+zDI4/oz1o85EUyUvrk8uJ0C5XkJ"
    apiEnv:
      oidcIssuerPrimary: "AgDAX2+Oo/9vUqiSaTShVPoYdhyrBV8V78QBJf4NBqk/GvOLWm7BeZtnrZiVlDXk2TcKZTqZchie1tUL05aQQSH5Fq2nRe0/uFgIU41VmqwdO1KRMJEq6GW8khFYsVx2KZmk55Ycw+7GsOoke97New6pyD3i2KjZw2p4ohlM/otVW6OTNTW7B3QZkHpne/6rI4TTxI5RrCMRUAi8tRVEEyFyeE+UfsTTqVR0cV5Mi7FZ3lAYVy+YL/DwKlPkhhdJ/JvM6IXgIORLhfyGSONAPX8jZs5lOjkntGMihNvD3XpJjSOfHsS+S2qTP469eyY/RyvwNXOakz/SwvyMX4kx2M/XU4Hio668iLB/6n9KLMpJ9ZbS7jabZPPxbxCfHIrRruO/4IWsyz6VBLS6Gike8cXL+4MZI5PXHSSL1UHqXFgCZSVM/vobY+i9Y8DHf+sW+nNL11b4eP+RmNVCvt9qVsJaY4NFcaXGPatyOAFxvVN7hu/v3aEAko6lTQLIYiddTnd0dpxRap5d3xQbKq93mFc6fxWDaFk5voT/Mk4xMFxzaTj74ogbRaUq9h8JyMiNvVtitCBwULMHV9rAHhWixPTzce+FUfmYVL5C6u+7/9y6zuMZPHotdv8YR1Nm2us7H55fRPUFdEsTka6YIKDbA9OIPRvH5gRfueyYXlXxOhHQZEfr2hePTVsXdK2NNGNhgLhy+JyaLhUS7WQrli4X/m4IxIEXTKpbqt6+/sQ="
      oidcIssuerAlt:     "AgANv3uZkpdlD62+MBDHAhJQc1kPsbUeL5K1UwtVGIE8oVlnniVcGhhgz8QUOBmqEZYCidTVGWPtp3H86sorVJbIgqc3kUptnnPnQMMoZh+LusujxKTVy178UjaCltI/pdXCQHWCWAtS4RbTGLNa3tcQ5rEX3Tjx3S6Pa49vO6mVbgKWSuwn++K5ee+NtPw11q9aZFHBR0apskZWLXMp6GDvXE3ZNqYCqHFYpzJIGpahoVOTkzC6BPYTuuExOYo8+PW81RB+N5wNDzxqkvPmEKj4alcI/zEMND+u5MH+C+uD6GRYfd0TqPibj6wHmJdeAq76ux1C8GvdGSSB+bYGb0EvXCZHw7SvZMWUx/Rk5AYqcjRU8IbwKnZFQ8O4pRd7NIaxevu9e0DXmIjtQxSAAS2ITVKnt99nEgdcAY0dFeC40DrC8NfvdFXymG/0DhbpsTHC+xTmkL78/5IebzRQ8xH6543wolFDwUiSsGaZ+r2XS2SquDSdl0qZ+Ekfy0jyWKa0gdRcGMB++nEmApLTs8RY2m4As6GsAqANI6CqhEKBo0PfGkTiBQOLqGYJWVWXSAnFrgVjDKad4paIjA33J67VmshrTI7hskXwh+scvDS618ed9c/pPCSGJ5hsoLxUFv3O0pHOwjcbFGobtbAsLCSDdBUuWQQFBSEmjtSTzPo+n/lqGoVMVv9XHauNUPrXYmsqD4pZKnVpECFTaCJWLlIIMMHV"
      oidcAudience:      "AgAjwErIhkyCHSohp//CGd5lSjMlBSHDNAA+5X07ClJG7KtsWepqhgvz1+zskKUZsd/9s55Arg5u9rBV92BPXVhVFZe5z8G+U7cB9A2RVMohwa0bGXx0P/2NYUlf21nmp1tFF6gvyEnvNXEKlVOFqNkOv/B5WmlN409xkZoqW3eALAcA6H8RVhbFz/DBd2P7SKdk81P5o3Cj1czyaBFyb/l9bQqX/UjYjYRhNfyhB7kJQoCNJdbLwOYMboAGCQiihCoSe62nxQb94WFLISztatxIBPy0oKjLanVHdGWynk06FAXpDgDrJisNY+04j9azStVPIK345cxgM0Tlgqbicu04nr+UdQLWWQcHehQAqusebksKiyPq6N4u1YwJhPZPWrZUlQ2G6rvGtSw4PesjmP5GrBLhWyrnKjSKuBEuMfmKnZKu1+iROZSXCuEd6L3xmOofqT2EH2LmnEHwVfe3mLDjMXhZIdEK4eV16tl0YXRPUODGC3aCkGCdG4cZc/OQj/rVz9aOvPWV7vlt97SqGwgBUScAvg4EdAuM0EIlg8u3EQ+GEjDmwoysSHyE1ENrxOn2wU6/uEvIiQt9iGi4drJUTtQIbn62C+wL58bwjefVPfiw2vk5uRjubU6prP4CynMVUNAiIIfXv5+e3iwDhzdhitsQiVJ8y68qLURbhEbcVqZcdnraBuzCurvjrkdSsdd4C/19PxSaJSJQRE0zpxtqL0sVVrzdAA2N7ThYp2kIC6D9qI5Ih5qLi14t69Qp5pKDXsErY5grhsxtp6zaBnEk1pEfPNfjN3I="
    redisAuth:
      password: "AgCPu0er4ygBuwDGmSe4+924q/G+PTSecPwMAlmR1YFqTSf2cXDovwCphas9smtnRhygPq3qGEBQK+gfsOg8Bkhb5S9YMJ0qy/7nkpueES4SUmyRX3vwjrqM2sjWtfpECOvfpHriyoImRKATEJq9Ee6G5LvKoN8CAizjLC5bYzXBif4hAmJ+1WDCeNNKMqJP2VdxzUIBYgAgEMG74A4i/DbUOy4AnBaVYwk1mSnfPOEg3FnPiLNwWfb2uRpiNfi2nhjp8zZQ2saYOI/KWXPwD2M+In2cHU47MX0a/oeSebTnnkEnzWs2CncfTQYwOyytttc/dcQucLcqYOKgR3Xiisb1Cg7as/xLqvFPHLKJlRxyQ0Wv8l+uG8FTeITjIyTCd8Mm3aBofkv8/mqGVEzcjdTO7Dd2z4z525Fnx7ndiR+q71QCPh7gSysKarMiMS2LeZ82bb5E5NobgDUXFzcnZ/KCfJYpcIZKR2MNb/7xWmzEHwrQrOdR0v2tKNJ16XZmqaTrSB9WLSEwiLMBAQrE+O/Cfj9rHauFQ6nhdxDJ3FgCFtjtXblnC24hIiH83YhSFN61oLXTUyaN+vOjosQwJOsUGhpkYqYB73mzprkc+NuKfrUc6f0YtpJswvIuItEgypTYX8zZuDOETbSZtjRxEXw9cTS1HnXqH3KZx0cjFGViF6esv2UjSoQoGDZytXo1cdzhxamVhiS9zN+RW3kWySTMwdJlYB2BPOEMBJ6moms+DoaAk2ULpNHPNvgfOw=="
