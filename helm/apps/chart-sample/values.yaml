# =============================================================================
# Umbrella values.yaml
# =============================================================================

# A single place to reference your image pull secret name
global:
  ghcrPullSecretName: ghcr-pull

# -----------------------------------------------------------------------------
# Redis (Bitnami subchart)
# -----------------------------------------------------------------------------
redis:
  enabled: true
  architecture: standalone
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: ""   # force digest-only
    digest: "sha256:dc2a0dd151651b8081045e84ef8f74d53c0def91f799539eb1fda04a7959c069"
    pullPolicy: IfNotPresent
  master:
    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        partition: 0
    persistence:
      enabled: false                     # dev-friendly; enable in prod overlays
    podAnnotations:
      sidecar.istio.io/inject: "true"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
  auth:
    enabled: true
    existingSecret: redis-auth           # materialized from SealedSecret
    existingSecretPasswordKey: redis-password
  tls:
    enabled: false
  networkPolicy:
    enabled: true
    allowExternal: false
  metrics:
    enabled: false

# -----------------------------------------------------------------------------
# API (Node/Express backend) — your chart aliased as `api`
# -----------------------------------------------------------------------------
api:
  image:
    repository: ghcr.io/kdiggety/api
    tag: dev
    pullPolicy: IfNotPresent

  replicaCount: 1

  service:
    type: ClusterIP
    port: 80

  # Use dedicated SA + pull secret for GHCR
  serviceAccountName: ghcr-puller
  imagePullSecrets:
    - name: ghcr-pull

  envFromSecrets:
    - api-env

  # Redis connection contract used by your api chart templates
  redis:
    host: "{{ .Release.Name }}-redis-master"   # e.g., fullstack-redis-master
    port: 6379
    passwordSecretName: redis-auth
    passwordSecretKey: redis-password

  # Optional direct env (keep empty unless needed)
  env: []

  probes:
    livenessPath: /healthz
    readinessPath: /readyz

  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# -----------------------------------------------------------------------------
# Web (React/Vite frontend) — your chart aliased as `web`
# -----------------------------------------------------------------------------
web:
  image:
    repository: ghcr.io/kdiggety/web
    tag: dev
    pullPolicy: IfNotPresent

  replicaCount: 1

  service:
    type: ClusterIP
    port: 80

  # Use the same SA + pull secret for GHCR
  serviceAccountName: ghcr-puller
  imagePullSecrets:
    - name: ghcr-pull

  # If your web chart supports envFromSecrets, this provides API_BASE at runtime.
  # (For Vite build-time vars, still inject with --build-arg in CI when building.)
  envFromSecrets:
    - web-env

  # Optional runtime env fallbacks
  env:
    - name: API_BASE
      value: "/api"

  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

  runtimeConfig:
    googleClientId: "757483491986-s6es27343115bs05medv52v506cg81b0.apps.googleusercontent.com"
    apiBase: "/api"

# -----------------------------------------------------------------------------
# Istio ingress layer — your chart aliased as `istio`
# -----------------------------------------------------------------------------
istio:
  gateway:
    name: web-gateway
    namespace: istio-system
    hosts: ["*"]
    port: 80
    selector:
      istio: ingress
  virtualService:
    name: fullstack-routing
    hosts: ["*"]
    gatewayName: web-gateway
    routes:
      web: { prefix: "/", service: web, port: 80 }
      api: { prefix: "/api", service: api, port: 80 }
  auth:
    enabled: true
    google:
      clientId: "757483491986-s6es27343115bs05medv52v506cg81b0.apps.googleusercontent.com"
      # Optional: limit to certain Google Workspace domains
      # hostedDomains: ["example.com"]

# -----------------------------------------------------------------------------
# SealedSecrets — your chart aliased as `secrets`
# These ciphertexts are produced by `kubeseal` and render to:
#   - Secret web-env    with key: API_BASE
#   - Secret api-env    with keys: oidc* (incl. clientId/clientSecret)
#   - Secret redis-auth with key: redis-password
# Commit ciphertext safely; never commit raw secrets.
# -----------------------------------------------------------------------------
secrets:
  sealed:
    webEnv:
      apiBase: "AgAtrPRs3mM3Flq852wX0xO2jaF39mOJJV0OVGF+W50edFUsuXVm+M/nMg2V24K6qtbgwG9/dNh1NexKIn5V8CTm8GaZjVv/wWD7uiMwf8Rp45Q0rE9ir/b1Or1wO5WI3eGyrA/NmH1Ui3WbWigvwzjrZGb8sWK5BQXmeArjUnUFvjLIkvMXfvKpVa8QALQAlAqiAIhhcbm1HalGwCeSIeaRRj+vZJIHQRB0CGcgBmZCV1+F9VGOhlgmGwUmCB8R0mlQV1wMow/ZBBY+JZaLZgbNfUE2LIuAO0s1Rmn8QoqZ/cn+XWyeYDbLndYe61OyvpSAr2y8IBCvQFaWwaXeV90wCSkxPBNIXQScexKjOuPgy8/3yFfz2AJ41cXyhtOOOSNNcsucTpHp/rHQfSTww9OaXVigQPlMslRp10h1ikTQp+s22zP3bJs2Ng0cvm0KZJcP3nQEhATNTjWC3bslAZ1xfKpqngH1PyPQIYYTC5hpejHFcJSsbgsouwgWF5ecBIudJbIGxmhis/UtwYMhhgt3jDhgbZMUSKx0fa2mFKVNpS5cI9ST4bTsN2Uee/MG6zZMKOsdAqAe3BnAojt1Rs/BEGdXpRkN5/0C93vapQ+eQKYPa+bCEAzIK3EUCj6E3zzrKpO4K+YvBTjPzt/2qSwVAkEPyz+9/WtIR/4joLut1A+6D8dZOUSNo99fdNdocPhoGn+G"

    apiEnv:
      oidcClientId: "AgBpSxozwg5eFXFs29dq8cLhhYA3mMvZjlmKR2VzBBDRQWCCzFGlW5B072L080vnCQdQdR0HkR8OnRBGeJzGN7zysbXpTcP8YLLDho089E+TfEci25kwgWxCXy5y4ZnI0B8dQi9lTg53H6FK55HoWyfv0MTYyhrB//931Zwiaq+uv3NuYw/gOifxFi6+ajsN7iJfBQsAaIwWe5w86J8gARhLgOVIXbG/I5GhtlV9aZkjdlgTZMjQsMlGYrKiu+jvo1KLtwD0q2UiGaPM034nNqLbHQzJI5SzyI3Yck+Ofa6vLU/OMx8gQckka595i2f4Bs/Z5WxrPB2GkCla9yB3ZqXy1ozdBxA+ntuMSJmdZfP7DS0aO82js0MVMDJ6uL5EZvPD9pbUoli6itNafTA4JlfP/NsW1gycBcKBbmV5Le2PLnWwAfNxRgRMq9i0w4N/jZNRwRz7h6STJZL9GHb9NATZUE0LfrDW1btBboyF6258ecy407Bf+3TErWCYMjr9xNv0VgGhsSd5FXcACOxwS19178C2KzCwPCHQkpFHP2iHReWmntrufWwkVbctRCA26JXBYxGozKuuU/EoT7BRheXjXUal/bpe7mjc9KiD0BCwNkFhJzMsyiVtRxq2Ju+J8wwMZk+foXZHWBQdSHBAmbyWSZ4jeVPzVgV/q16DM7HUqPqKsFCgtD0FlziBasbkpnB+75PsdzoqCoAFpgSgj+hW1awhHhXURUnxe6WVkwJFZfXsLUqXc9pj8KzW9rgb+g0/9Fb6ORz16XCYiuSsaz3jUlpoBXcVlkM="
      oidcClientSecret: "AgB1puBLBW4Jgji9An1OSsv35pvhb9eZEXuEcjVy8cuwynB53lu1NrF8gnCkstBCPKjDj1/oplRLzogUr+KbmdZrKsec4OzTDoFK2fHCVdwaoWa1usO79Favnkc3jorYSCWWShYKsUfdiLS9c8tRECe5/ZyQqdqyMku/6i0YSRXwyoMsFKJDiZQrT0uVw49e9arJ5mErCuWDOdOAcgvbU4FAhCqpLgPwpj43WGk1oJ1WnM17BaxCXoS6IgJryHtBAdZmNgi+j+37ln/+F5T8zj7VYmu0hivxCq1MfLVT7K4HB3gN5Ps+Kj9lxetSeTsOscpLsXXby39eFTVM/cRpRm5vJUrhmKKFEKaCHRRyfAEtGiVC5qqrMa+h6DMjLp/0+qChIVrLHDZza7oB/14EKNL3tq3YfxH4wdBb6UNj5e3t89p1NuZa7ZPvX4L7wqCaQIruLNEtApRwmYF0aN2fY6FisRGCqX1AnE8DnB/vBhxn/iwIH/vDGDuuC7v9+t8k5uB3SIEt5ZHY1yOaGabP4AgPPX/axgrtZvqg1xiFeY95qs/8xzXc9h5VY74wL4poLX/8L09FAKRf/hoKwUDKGWxsprEZq4VthfK14MG0bzeTNp5tpFXKnL48EpJUXJErMs6NjB8zVxlcZaL1ffBkjKW3rrfuGx4nbj7WdpANi+dGfAlZgZZ8+iCwRUB/SSAME9fzllRz8ZU1axG1VjioUsKCZ0yZnVvUZxd9oic7YJ7H9HJU4w=="
      oidcIssuerPrimary: "AgBYh26alYsGhC8n4vXoj5now9bdI3B90hkobYpvSpMKGwGP1/dvCqjzWNfLdNdPT3b5fMmkPeh/Wl8Tc9K2GCbP+tDu0poVllX4JlUxq0768YwNytBCwH8EqNBVkq9OdN7asRDdB3Lo3B4WbMVCc6HrlC5hDYnvIJtzVWx2HeQP7viuXQJ3u+QEyWvdKLT/3NkFe0GzShtn2T/Dhr44wSYbhtgvhKbH/m8y11AsRjjBQEWKk/ivNtmFcJr87w5COhxQeFjgjWOcv6dKfBsDKFEnQibAuvV/23mi3uiL8vQ9m+qYqhM8U9pjcBcFmmCGWJvrzwzlaIYQBYRMqLsL9J4ZmQYbiMYSET8Sd2HXhfLCXmaeexQkf4EFOgAs0dAYMd7ObsZ+rvismgbBxF8tG8tUlsAdY+ni+WerVAgi5LjEzSB+696Qy9v6A9b0Kfl8OlV283jHb+mcnFTd8Wo26BXDyRV6Nxyu/BhpJ6rg5LpDmEUNoqM6uX/qfYfxP3A1qxUv4soNVoYzQ4lNsNs8Q1oaQlxQxBj+2HC6/Gispk67SwavnKU0E2QEuLFRHUMH3kBnd4P/31itCuMicBbMJ/8QVk1PblSvYpnpaQkNRcH5oGIiOz/4KSWLbMRn3WPnxW5krBCC3Om6vEi5KshWuHvm5lq67uaGhE2zhQVvyhO7lJonIrDSNC0chCdtoxXkGRUqR/awZ+gQ+4gijjUimsiEtZ/HiD/cf5psYys="
      oidcIssuerAlt:     "AgBOCvq+9yVF3X44S863pAfWiHLOOZCl81H9ebzRSXZbFNcSw6IGuPP66bRI/mpsYLkKSD8ArREGiSPb+hPX9T5N2LS1td4HkNsgboc4XZIjsF8dY1XfSNb1nIvI7LUKqWXBkS/obDo8SF4lKfaUNkzMGc4ouPC0ZFD5FyxeDYdbSS217e9hgYfLc/erkGz/vo66Q0zxewE8H0RGt+HM9O752zVJGScDV/LbG8syODIIT3x3LP8XQWjq45NY5MMX5db+J+Tcwukm3fmuBFMp0prLU5axRroZJj0hMTwDdlMyNZQUNU8Hj5s/5xgrotBKWuLwi/fmQJi44ArznKQ26T0V+irB1XUesBUsULgPIV3xoWAzAE74eGLxRE/FDhlFIVcJVMn7+d7PWFgkXZM/sIHt15JZO7GapyWHYPW4IwEVJX4avxBBehNN8HtG6n01jBGfmrIGSTNKUJNYsPTBslnRHPtYXcXaRWwE9x7qV/+96zHdSKiXnJwWuIfDe7XgRySdGsRpjJAyfGO4IWis2TiW0QpSXJEccTeMdpc1xDOPLAcW+kjmKo66M45xBT+pjTxq+PR24MplaazOyQfP4v2NrkqoQ+m6gNqnaKvMC2CQ7pzQgOKat0CCUyteqGi0yq2wvbHLCTyd+2Xt070NlyovGJtpzpqVl1pZnk8QYOUnSQu3yVGFethhHS4v3rCqmzn5TjVHdwn0Wdi8l2MiAZkVyOz1svyPLtISqGcaeSAjW2WOm9Dj90VBAu7nb7k="
      oidcAudience:      "AgB0pvxlQb0VHSZhJ5ClHKGV/eQ3nju3MRU0XtX8vdAiLDE1W41e8SiXlBFBJ60+jIITAJ1n1YtddC0acPs+5DzlKFktaFuJSaqWVHeHke26Q/wqX9cDasWjgqVplpY7VobgmmiJndxKAgK7yV7Ab/akqc+cFA0qHrbkGPBBpLB0Xwpd3mi4gdGyDnzY/PLGRAAjeTCFWk134axquiNVjocOJg+akk1MyvYnOKOPi2OKj6yh99ajDknLZGBSli4Yx0PKBVHh9uvVf17T4J7E8wCukUOn/ymtsVb8x6HXLhfy6DRZGDfsPnC/AL/k+jM8YH172GFcuMiZtBmPJug5a+1VTC7AtH7chySBVcAalnQv7HONZEo1MZmoY0EiKJNy+Kx4KLFubty+P/+YvepbxYemGC9ypMY9U0YUzHyGfljMgZTqcL6kxeRDu8j/PNb8Uy40uSSNkGu5qOPFaqt5ObtzOHdpU9XGownKiYYUxRIJ4bitc5xkxuo0GJPURcLMHaA/x11M4JnctFxhbE0Y+ACkp0dVOmAqmbkTf0kWIsymcBNmC0n+ov7jiZ5GYJsfbQNNc16scIeP673fHWo7uEbUI3RVpt/LP2KHPjeJJfUPq51FtQ2uDWU94iBy/4xFHLZHrq1lP2rh/9yarOwbA9Oh6Qrzmqz0WmlBhBtmQ0keJ26Kz/tikZzAIolmZP1ejOqksvr9wMsB3F7CsR6Gias1IooLP3QNu7V2WYl5UvD3RMFFdKBJ/e85sb17lwICmlxd7DVpwQKIj+Gmz0ROyupsm1/JNatQdC4="

    redisAuth:
      redis-password: "AgAHrPndmJB5ddNZ7UE29xGvS7O3StmNhd9n0FbfasZUSp0saMmyC5+JrbO5rcs6afKfkV4o4LZDOdNzzdkPhraB5wsvmGv9/6TPIyS6ptrqapEVAHwxbqWKVm4BN8tG5NsNkMNdPOYnzm4SvVmts/gQ6eRJNvN4KBlxRGjIE7mOf4MohC+lYbRPJMFkVlN39hfdeugDGfPzltl7ggS5eSTZhHlpONbRYnyuuIJ4H0MPo+Xz8UKy3Bz1b3NA0Y89bzGGa9Ko5TKnly7Kn40IGwCWUM/Z10cnweDbCgs6s+PJwXZTbo4WYC7Y+vCOLKGH/4AjlDuIyNBjCqcwPxHsh10+3E0WPohZRd3A1kdD9UkD6X4ZlSMPQ+hlvttARYCyILt4pD7nSbqr4Mg/doBpFJsA/PlYMdp6a/lLm3lNk0VGfWRZSBUAPzZ9gr2EBi6lSxgILB+/PECbh4xxXQXgbJhkgWC7+nTsPWBCiB2XluJu/wQoqxXNUNg0gym6yqVSor9BU7f2/WYLR/r7RIYDCe4pCNYEDC8jUuRaEGRjeQyEgiiwHkIg/t+s6TZc9dom0iGoZcl0vWKKT4h8BbFEjcywYgK4yh5dQlC9RLp1x7kDyXCxvMml51XRLLr6IgI2Z6yRFLwYxAz9AnAvfcNHFmaRrEuCMcQFvVrDCejpSsfhrfe07SPd3P+fS8U5GkHDqAhMr/DqKtXtQwhi3+BiaVkSoOKe"

