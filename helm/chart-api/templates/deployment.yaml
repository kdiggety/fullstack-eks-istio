apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: api
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: api
        app.kubernetes.io/name: {{ .Chart.Name }}
    spec:
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
          env:
            - name: REDIS_HOST
              value: {{ tpl .Values.redis.host . | quote }}
            - name: REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.passwordSecretName | quote }}
                  key:  {{ .Values.redis.passwordSecretKey  | quote }}
            # (optional) load other runtime env (e.g., JWT_SECRET) from api-env
            {{- if .Values.envFromSecret }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envFromSecret | quote }}
                  key: "JWT_SECRET"
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessPath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessPath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
