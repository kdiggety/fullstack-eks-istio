{{- $webEnv := (lookup "v1" "Secret" .Release.Namespace "web-env") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: web
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: web
      app.kubernetes.io/name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: web
        app.kubernetes.io/name: {{ .Chart.Name }}
      annotations:
        checksum/config: {{ printf "GOOGLE_CLIENT_ID=%s\napiBase=%s\n" (.Values.runtimeConfig.googleClientId | toString) ((.Values.runtimeConfig.apiBase | default "/api") | toString) | sha256sum | quote }}
        checksum/web-env: {{- if $webEnv }} {{ toJson $webEnv.data | sha256sum | quote }} {{- else }} "absent" {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName | default "default" }}

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- range . }}
        - name: {{ .name }}
      {{- end }}
      {{- end }}

      volumes:
        - name: runtime-config
          configMap:
            name: {{ include "web.fullname" . }}-runtime-config
            items:
              - key: config.js
                path: config.js
      containers:
        - name: web
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}

          {{- if .Values.envFromSecrets }}
          envFrom:
          {{- range .Values.envFromSecrets }}
            - secretRef:
                name: {{ . | quote }}
          {{- end }}
          {{- end }}

          readinessProbe:
            httpGet:
              path: {{ .Values.readinessPath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessPath }}
              port: {{ .Values.containerPort }}
            initialDelaySeconds: 10
            periodSeconds: 10

          volumeMounts:
            - name: runtime-config
              mountPath: /usr/share/nginx/html/config.js
              subPath: config.js
              readOnly: true

