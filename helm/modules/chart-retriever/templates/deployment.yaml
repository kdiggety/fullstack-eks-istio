apiVersion: apps/v1
kind: Deployment
metadata:
  name: retriever
  labels: { app: retriever }
spec:
  replicas: {{ .Values.replicaCount | default 2 }}
  selector:
    matchLabels: { app: retriever }
  template:
    metadata:
      labels: { app: retriever }
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.imagePullSecrets }}
        - name: {{ .name | quote }}
      {{- end }}
      {{- end }}

      {{- $rp := .Values.readinessProbe | default (dict) }}
      {{- $lp := .Values.livenessProbe  | default (dict) }}
      {{- $rpInit := 3 }}
      {{- $rpPeriod := 5 }}
      {{- $lpInit := 10 }}
      {{- $lpPeriod := 10 }}

      {{- if kindIs "map" $rp }}
        {{- $rpInit = default 3 ($rp.initialDelaySeconds) }}
        {{- $rpPeriod = default 5 ($rp.periodSeconds) }}
      {{- else if kindIs "int" $rp }}
        {{- $rpInit = $rp }}
      {{- else if kindIs "float64" $rp }}
        {{- $rpInit = ($rp | int) }}
      {{- end }}

      {{- if kindIs "map" $lp }}
        {{- $lpInit = default 10 ($lp.initialDelaySeconds) }}
        {{- $lpPeriod = default 10 ($lp.periodSeconds) }}
      {{- else if kindIs "int" $lp }}
        {{- $lpInit = $lp }}
      {{- else if kindIs "float64" $lp }}
        {{- $lpInit = ($lp | int) }}
      {{- end }}

      containers:
        - name: retriever
          {{- $registry := .Values.global.image.registry | default "ghcr.io" }}
          {{- $owner    := required "Set global.image.owner (e.g. --set-string global.image.owner=$OWNER)" .Values.global.image.owner }}
          {{- $repo     := .Values.image.repository | default (printf "%s/%s/retriever" $registry $owner) }}
          {{- $tag      := .Values.image.tag | default .Values.global.image.tag | default "latest" }}
          image: "{{ $repo }}:{{ $tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}

          env:
            - name: OPENSEARCH_URL
              value: {{ .Values.env.OPENSEARCH_URL | quote }}
            - name: INDEX_NAME
              value: {{ .Values.env.INDEX_NAME | quote }}
            - name: ANN_FIELD
              value: {{ .Values.env.ANN_FIELD | quote }}
            - name: MIN_SCORE
              value: {{ .Values.env.MIN_SCORE | quote }}

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}

          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ $rpInit }}
            periodSeconds:       {{ $rpPeriod }}

          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ $lpInit }}
            periodSeconds:       {{ $lpPeriod }}

