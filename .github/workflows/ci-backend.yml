name: Backend CI

on:
  pull_request:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/ci-backend.yml"
      - "backend/Dockerfile"
  push:
    branches: [main]
    tags: ["v*.*.*"]
    paths:
      - "backend/**"
      - ".github/workflows/ci-backend.yml"
      - "backend/Dockerfile"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ci-backend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-build:
    runs-on: [self-hosted, local-k8s]
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/api
      TAG_FULL: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: backend/package-lock.json

      - name: Install deps
        working-directory: backend
        run: npm ci

      - name: Test
        working-directory: backend
        run: npm test -- --ci

      - name: Derive short/release tags
        id: meta
        shell: bash
        run: |
          echo "SHORT=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "RELEASE_TAG=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "RELEASE_TAG=" >> "$GITHUB_OUTPUT"
          fi

      # Enable multi-arch builds (arm64 + amd64)
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Isolate Docker auth for this job (avoids stale creds on self-hosted)
      - name: Isolate Docker config for this job
        run: |
          mkdir -p "$RUNNER_TEMP/.docker"
          echo "DOCKER_CONFIG=$RUNNER_TEMP/.docker" >> "$GITHUB_ENV"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push api image (multi-arch)
        id: build_push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG_FULL }}         # immutable, preferred for deploys
            ${{ env.IMAGE }}:${{ steps.meta.outputs.SHORT }} # convenience (do not deploy from this)
            ${{ env.IMAGE }}:dev                          # mutable channel
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repository }}

      - name: Also tag with release tag (if present)
        if: ${{ steps.meta.outputs.RELEASE_TAG != '' }}
        run: |
          docker buildx imagetools create \
            --tag $IMAGE:${{ steps.meta.outputs.RELEASE_TAG }} \
            $IMAGE:${{ env.TAG_FULL }}

      - name: Show pushed digest & platforms
        run: |
          echo "Digest (full): ${{ steps.build_push.outputs.digest }}"
          echo "Platforms for full SHA:"
          docker buildx imagetools inspect $IMAGE:${{ env.TAG_FULL }} | sed -n '/Platforms:/,/^$/p'
          echo "Platforms for :dev:"
          docker buildx imagetools inspect $IMAGE:dev | sed -n '/Platforms:/,/^$/p'

