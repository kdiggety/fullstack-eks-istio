name: Backend CI

on:
  pull_request:
    paths: ["backend/**"]
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yml'
      - 'backend/Dockerfile'
    tags: ['v*.*.*']   # build on releases too
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # <-- required to push to GHCR

jobs:
  test-and-build:
    runs-on: [self-hosted, local-k8s]
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/api
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "backend/package-lock.json"

      - name: Install deps
        run: npm ci
        working-directory: backend

      - name: Test
        run: npm test -- --ci
        working-directory: backend

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push api image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }}
            ${{ env.IMAGE }}:dev
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max

      - name: Also tag with release tag (if present)
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          docker buildx imagetools create \
            --tag $IMAGE:${GITHUB_REF_NAME} \
            $IMAGE:$TAG

      - name: Show pushed image refs
        run: |
          echo "Pushed:"
          echo "  $IMAGE:$TAG"
          echo "  $IMAGE:dev"
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "  $IMAGE:${GITHUB_REF_NAME}"
          fi

