name: Backend CI

on:
  pull_request:
    paths: ["backend/**"]
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/ci-backend.yml'
      - 'backend/Dockerfile'
    tags: ['v*.*.*']
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  test-and-build:
    runs-on: [self-hosted, local-k8s]
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/api
      TAG: ${{ github.sha }}
      DOCKER_CONFIG: ${{ runner.temp }}/.docker   # <<< isolates docker creds for this job

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "backend/package-lock.json"

      - run: npm ci
        working-directory: backend

      - run: npm test -- --ci
        working-directory: backend

      - uses: docker/setup-buildx-action@v3

      # Fresh login written into our isolated DOCKER_CONFIG
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}   # resolves to 'kdiggety'
          password: ${{ secrets.GITHUB_TOKEN }}

      # (Optional) quick prove we are using the isolated config
      - name: Show docker config dir
        run: |
          echo "DOCKER_CONFIG=$DOCKER_CONFIG"
          ls -la "$DOCKER_CONFIG" || true
          cat "$DOCKER_CONFIG/config.json" || true

      - name: Build & Push api image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }}
            ${{ env.IMAGE }}:dev
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max

      # (Optional) create a short tag too (handy for manual pulls)
      - name: Tag short SHA
        run: |
          SHORT=${GITHUB_SHA::12}
          docker buildx imagetools create \
            --tag "${IMAGE}:${SHORT}" \
            "${IMAGE}:${TAG}"

      # (Optional) list tags to confirm push worked (requires pull scope)
      - name: List tags (best-effort)
        run: |
          echo "IMAGE=${IMAGE}"
          # GHCR tag listing is a bit picky; this often works if the package exists
          curl -sL "https://ghcr.io/v2/${{ github.repository_owner }}/api/tags/list" | head -n 40 || true
