name: Frontend CI

on:
  pull_request:
    paths: ["frontend/**"]
  push:
    branches: [main]
    tags: ["v*.*.*"]   # build on releases too
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ci-frontend-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: [self-hosted, local-k8s]
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/web
      TAG_FULL: ${{ github.sha }}
      TAG_SHORT: ${{ github.sha }} # will set via step

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: npm ci

      - name: Build (Vite)
        # NOTE: API base / OIDC config are provided at runtime; bundle is static
        working-directory: frontend
        run: npm run build

      # Optional: artifact for PR previews
      - name: Upload dist artifact
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: frontend/dist
          if-no-files-found: ignore
          retention-days: 7

      - name: Set release/short tags
        id: rel
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            echo "RELEASE_TAG=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          fi
          echo "SHORT=${GITHUB_SHA:0:7}" >> "$GITHUB_OUTPUT"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push web image (linux/amd64)
        id: build_push
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG_FULL }}
            ${{ env.IMAGE }}:${{ steps.rel.outputs.SHORT }}
            ${{ env.IMAGE }}:dev
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.repository }}

      - name: Also tag with release tag (if present)
        if: ${{ steps.rel.outputs.RELEASE_TAG != '' }}
        run: |
          docker buildx imagetools create \
            --tag $IMAGE:${{ steps.rel.outputs.RELEASE_TAG }} \
            $IMAGE:${{ env.TAG_FULL }}

      - name: Show pushed digest
        run: |
          echo "Digest: ${{ steps.build_push.outputs.digest }}"

      # Optional: auto-trigger your deploy workflow with this exact tag
      # - name: Trigger deploy (repository_dispatch)
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   uses: peter-evans/repository-dispatch@v3
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     event-type: deploy-local
      #     client-payload: |
      #       {"tag":"${{ env.TAG_FULL }}"}

